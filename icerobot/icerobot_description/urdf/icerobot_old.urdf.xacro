<?xml version="1.0"?>
<robot name="icerobot" xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- Base Size -->
  <xacro:property name="base_x_size" value="0.96520000" />
  <xacro:property name="base_y_size" value="0.63500000" />
  <xacro:property name="base_z_size" value="0.6154100" />

  <!-- Platform Size -->
  <xacro:property name="platform_x_size" value="0.320000" />
  <xacro:property name="platform_y_size" value="0.63500000" />
  <xacro:property name="platform_z_size" value="1.4000000" />
  
  <!-- Wheel Mounting Positions -->
  <xacro:property name="wheelbase" value="0.3080" />
  <xacro:property name="track" value="0.33" />
  <xacro:property name="wheel_vertical_offset" value="0.07" />

  <!-- Wheel Properties -->
  <xacro:property name="wheel_length" value="0.11430" />
  <xacro:property name="wheel_radius" value="0.167" />

  <!-- Base inertia properties -->
  <xacro:property name="mass_base" value="34.33" />
  <xacro:property name="ixx_base" value="2.4304" />
  <xacro:property name="ixy_base" value="0.5116" />
  <xacro:property name="ixz_base" value="0.0091" />
  <xacro:property name="iyy_base" value="3.7564" />
  <xacro:property name="iyz_base" value="-0.0016" />
  <xacro:property name="izz_base" value="3.8077" />

  <!-- Platform inertia properties -->
  <xacro:property name="mass_platform" value="49.4938" />
  <xacro:property name="ixx_platform" value="16.83" />
  <xacro:property name="ixy_platform" value="0.3363" />
  <xacro:property name="ixz_platform" value="0.1616" />
  <xacro:property name="iyy_platform" value="3.9954" />
  <xacro:property name="iyz_platform" value="6.3377" />
  <xacro:property name="izz_platform" value="13.2782" />
  
  <!-- Wheel inertia properties -->
  <xacro:property name="mass_wheel" value="4" />
  <xacro:property name="ixx_wheel" value="0.0553" />
  <xacro:property name="ixy_wheel" value="0" />
  <xacro:property name="ixz_wheel" value="0" />
  <xacro:property name="iyy_wheel" value="0.0315" />
  <xacro:property name="iyz_wheel" value="0" />
  <xacro:property name="izz_wheel" value="0.0315" />
  
  <xacro:arg name="robot_namespace" default="/" />
  <xacro:property name="PI" value="3.14159"/>

  <!-- Robot base -->
  <link name="base_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://icerobot_description/meshes/base.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 ${base_z_size/2}" rpy="0 0 0" />
      <geometry>
        <box size="${base_x_size} ${base_y_size} ${base_z_size}"/>
      </geometry>
    </collision>
  </link>

  <link name="inertial_link">
    <inertial>
      <mass value="${mass_base}" />
      <origin xyz="-0.00065 -0.085 0.062" />
      <inertia ixx="${ixx_base}" ixy="${ixy_base}" ixz="${ixz_base}" iyy="${iyy_base}" iyz="${iyz_base}" izz="${izz_base}"/>
    </inertial>
  </link>

  <joint name="inertial_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="inertial_link" />
  </joint>

  <!-- Wheel macros -->
  <xacro:macro name="wheel" params="prefix suffix reflect_side reflect_front">
    <link name="${prefix}_${suffix}_wheel">
      <visual>
       <origin xyz="0 0 0" rpy="0 0 ${reflect_side*PI/2}" />
       <geometry>
         <mesh filename="package://icerobot_description/meshes/wheel.dae"/>
       </geometry>
      </visual>
      <collision>
	<origin xyz="0 ${-1*reflect_side*0.04} 0" rpy="${PI/2} 0 0" />
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
        </geometry>
      </collision>
      <inertial>
        <mass value="${mass_wheel}" />
        <origin xyz="0 0 0" />
        <inertia ixx="${ixx_wheel}" ixy="${ixy_wheel}" ixz="${ixz_wheel}" iyy="${iyy_wheel}" iyz="${iyz_wheel}" izz="${izz_wheel}"/>
      </inertial>
    </link>
    
    <joint name="${prefix}_${suffix}_wheel_joint" type="continuous">
      <axis xyz="0 -1 0" rpy="0 0 0" />
      <parent link="base_link"/>
      <child link="${prefix}_${suffix}_wheel"/>
      <origin xyz="${reflect_front*wheelbase} ${reflect_side*track} ${wheel_vertical_offset}" rpy="0 0 0"/>
    </joint>

    <!-- Gazebo xacro -->
    <!-- Wheel parameters -->
    <gazebo reference="${prefix}_${suffix}_wheel">
      <mu1 value="1.0"/>
      <mu2 value="0.5"/>
      <kp value="100000000.0" />
      <kd value="1.0" />
      <fdir1 value="1 0 0"/>
    </gazebo>

    <transmission name="${prefix}_${suffix}_wheel_trans" type="SimpleTransmission">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="${prefix}_${suffix}_wheel_motor">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="${prefix}_${suffix}_wheel_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
    </transmission>


  </xacro:macro>
  <xacro:wheel prefix="front" suffix="left" reflect_side="-1" reflect_front="1"/>
  <xacro:wheel prefix="rear" suffix="left" reflect_side="-1" reflect_front="-1"/>
  <xacro:wheel prefix="front" suffix="right" reflect_side="1" reflect_front="1"/>
  <xacro:wheel prefix="rear" suffix="right" reflect_side="1" reflect_front="-1"/>
  
  <!-- Sensor Platform -->  
  <joint name="platform_to_base" type="fixed">
    <parent link="base_link"/>
    <child link="platform"/>
    <origin rpy="0 0 0" xyz="0.1 0.01 0.4"/>
  </joint>
  
  <link name="platform">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://icerobot_description/meshes/platform.dae"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <box size="${platform_x_size} ${platform_y_size} ${platform_z_size}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="-0.1 0 ${(platform_z_size/2)}"/>
    </collision>
    <inertial>
      <mass value="${mass_platform}" />
      <origin xyz="0 0 0" />
      <inertia ixx="${ixx_platform}" ixy="${ixy_platform}" ixz="${ixz_platform}" iyy="${iyy_platform}" iyz="${iyz_platform}" izz="${izz_platform}"/>
    </inertial>
  </link>

  <gazebo reference="platform">
    <material>Gazebo/Grey</material>
  </gazebo>

  <!-- Base footprint is on the ground under the robot -->
  <link name="base_footprint"/>

  <joint name="base_footprint_joint" type="fixed">
    <origin xyz="0 0 -0.1" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="base_footprint" />
  </joint>

  <!-- IMU Link is the standard mounting position for the UM6 IMU.-->
  <!-- Can be modified with environment variables in /etc/ros/setup.bash -->
  <link name="imu_link"/>
  <joint name="imu_joint" type="fixed">
    <origin xyz="0.19 0 0.149" rpy="0 -${PI/2} ${PI}" />
    <parent link="base_link" />
    <child link="imu_link" />
  </joint>
  <gazebo reference="imu_link">
  </gazebo>

  <joint name="scan_joint" type="fixed">
    <parent link="base_link"/>
    <child link="base_scan"/>
    <origin xyz="0.275 0.008 1.322" rpy="${PI/2} 0 ${PI/2}"/>
  </joint>

  <link name="base_scan">
    <visual>
      <origin xyz="0 0 0.0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://icerobot_description/meshes/lidar.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder length="0.315" radius="0.045"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.83" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.002" ixy="0.0" ixz="0.0"
               iyy="0.001" iyz="0.0"
               izz="0.002" />
    </inertial>
  </link>

  <joint name="camera_joint" type="fixed">
	  <origin xyz="0.10 0.007 1.345" rpy="0 0 -${PI/2}"/>
    <parent link="base_link"/>
    <child link="camera_link"/>
  </joint>

  <link name="camera_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
       <mesh filename="package://icerobot_description/meshes/camera.dae" />
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.012 0.132 0.020"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.44" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.000881243" ixy="0.0" ixz="0.0"
               iyy="0.000498940" iyz="0.0"
               izz="0.000879257" />
    </inertial>
  </link>

  <joint name="camera_rgb_joint" type="fixed">
    <origin xyz="0 0 -0.5" rpy="0 0 -${PI}"/>
    <parent link="camera_link"/>
    <child link="camera_rgb_frame"/>
  </joint>
  <link name="camera_rgb_frame"/>

  <joint name="camera_rgb_optical_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <parent link="camera_rgb_frame"/>
    <child link="camera_rgb_optical_frame"/>
  </joint>
  <link name="camera_rgb_optical_frame"/>

  <joint name="camera_depth_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <parent link="camera_link"/>
    <child link="camera_depth_frame"/>
  </joint>
  <link name="camera_depth_frame"/>

  <joint name="camera_depth_optical_joint" type="fixed">
    <origin xyz="0 0 0" rpy="-${PI} 0 0"/>
    <parent link="camera_depth_frame"/>
    <child link="camera_depth_optical_frame"/>
  </joint>
  <link name="camera_depth_optical_frame"/>

  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>$(arg robot_namespace)</robotNamespace>
      <legacyModeNS>true</legacyModeNS>
    </plugin>
  </gazebo>


  <!--
  <gazebo>
    <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometrySource>world</odometrySource>
      <publishOdomTF>true</publishOdomTF>
      <robotBaseFrame>base_footprint</robotBaseFrame>
      <publishWheelTF>false</publishWheelTF>
      <publishTf>true</publishTf>
      <publishWheelJointState>true</publishWheelJointState>
      <legacyMode>false</legacyMode>
      <updateRate>100</updateRate>
      <leftFrontJoint>front_left_wheel_joint</leftFrontJoint>
      <leftRearJoint>back_left_wheel_joint</leftRearJoint>
      <rightFrontJoint>front_right_wheel_joint</rightFrontJoint>
      <rightRearJoint>back_right_wheel_joint</rightRearJoint>
      <wheelSeparation>${2*track+0.127}</wheelSeparation>
      <wheelDiameter>${wheel_radius*2}</wheelDiameter>
      <wheelAcceleration>1</wheelAcceleration>
      <torque>90</torque>
      <rosDebugLevel>na</rosDebugLevel> 
    </plugin>
  </gazebo>
-->

  <gazebo>
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <topic>__default_topic__</topic>
      <plugin name="imu_controller" filename="libhector_gazebo_ros_imu.so">
        <robotNamespace>$(arg robot_namespace)</robotNamespace>
        <updateRate>50.0</updateRate>
        <bodyName>base_link</bodyName>
        <topicName>imu/data</topicName>
	<xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <accelDrift>0.005 0.005 0.005</accelDrift>
        <accelGaussianNoise>0.005 0.005 0.005</accelGaussianNoise>
        <rateDrift>0.005 0.005 0.005 </rateDrift>
        <rateGaussianNoise>0.005 0.005 0.005 </rateGaussianNoise>
        <headingDrift>0.005</headingDrift>
        <headingGaussianNoise>0.005</headingGaussianNoise>
      </plugin>
    </sensor>
  </gazebo>
  
  <gazebo>
    <plugin name="gps_controller" filename="libhector_gazebo_ros_gps.so">
      <robotNamespace>$(arg robot_namespace)</robotNamespace>
      <updateRate>40</updateRate>
      <bodyName>base_link</bodyName>
      <frameId>base_link</frameId>
      <topicName>navsat/fix</topicName>
      <velocityTopicName>navsat/vel</velocityTopicName>
      <referenceLatitude>42.86</referenceLatitude>
      <referenceLongitude>-80.27</referenceLongitude>
      <referenceHeading>0</referenceHeading>
      <referenceAltitude>0</referenceAltitude>
      <drift>0.0001 0.0001 0.0001</drift>
    </plugin>
  </gazebo>
  
  <gazebo reference="base_scan">
    <sensor type="ray" name="velodyne_VLP16">
      <pose>2 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>1875</samples>
            <resolution>1</resolution>
	    <min_angle>-${PI}</min_angle>
	    <max_angle>${PI}</max_angle>
          </horizontal>
          <vertical>
            <samples>16</samples>
            <resolution>1</resolution>
            <min_angle>-${15.0*PI/180.0}</min_angle>
            <max_angle> ${15.0*PI/180.0}</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.3</min>
          <max>2</max>
          <resolution>0.001</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.0</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_laser.so">
	<robotNamespace>$(arg robot_namespace)</robotNamespace>
	<topicName>scan</topicName>
        <frameName>base_scan</frameName>
	<min_range>0.9</min_range>
	<max_range>2</max_range>
        <gaussianNoise>0.008</gaussianNoise>
      </plugin>
    </sensor>
  </gazebo> 

  <!-- camera -->
  <gazebo reference="camera_rgb_frame">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
	<robotNamespace>$(arg robot_namespace)</robotNamespace>
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>rrbot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  
  <!-- depth camera -->
  <gazebo reference="camera_rgb_frame">
    <sensor type="depth" name="camera1">
        <always_on>1</always_on>
        <visualize>true</visualize>
        <camera>
            <horizontal_fov>1.047</horizontal_fov>
            <image>
                <width>640</width>
                <height>480</height>
                <format>R8G8B8</format>
            </image>
            <depth_camera>

            </depth_camera>
            <clip>
                <near>0.1</near>
                <far>100</far>
            </clip>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_openni_kinect.so">
	  <robotNamespace>$(arg robot_namespace)</robotNamespace>
          <alwaysOn>true</alwaysOn>
          <updateRate>10.0</updateRate>
          <cameraName>camera</cameraName>
          <frameName>camera_link</frameName>
          <imageTopicName>rgb/image_raw</imageTopicName>
          <depthImageTopicName>depth/image_raw</depthImageTopicName>
          <pointCloudTopicName>depth/points</pointCloudTopicName>
          <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
          <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
          <pointCloudCutoff>0.4</pointCloudCutoff>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
          <CxPrime>0.0</CxPrime>
          <Cx>0.0</Cx>
          <Cy>0.0</Cy>
          <focalLength>0.0</focalLength>
        </plugin>
    </sensor>
  </gazebo>
</robot>

