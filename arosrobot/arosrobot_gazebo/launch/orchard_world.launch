<?xml version="1.0"?>
<launch>
    <arg name="description" default="$(find arosrobot_description)/urdf/arosrobot.urdf.xacro"/>  
	
	<param name="orchard_geom" command="$(find xacro)/xacro --inorder '$(find arosrobot_gazebo)/urdf/orchard_geometry.urdf.xacro'" />
	<param name="robot_description" command="$(find xacro)/xacro $(arg description)"/>
	
    <arg name="robot_namespace" default="/"/>
    <arg name="x" default="9.0"/>
    <arg name="y" default="11.0"/>
    <arg name="z" default="0.0"/>
    <arg name="yaw" default="0.0" />

    <arg name="use_sim_time" default="true" />
    <arg name="gui" default="true" />
    <arg name="headless" default="false" />
    <arg name="world_name" default="$(find arosrobot_gazebo)/worlds/orchard_world.world" />
	
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="debug" value="0" />
      <arg name="gui" value="$(arg gui)" />
      <arg name="use_sim_time" value="$(arg use_sim_time)" />
      <arg name="headless" value="$(arg headless)" />
      <arg name="world_name" value="$(arg world_name)" />
    </include>
	
    <node name="orchard_gazebo_spawner" pkg="gazebo_ros" type="spawn_model" args="-urdf -model orchard_geom -param orchard_geom -x 0 -y 0 -z 0 -Y 0" />


  <!-- Spawn robot in gazebo -->
  <node name="arosrobot_spawn" pkg="gazebo_ros" type="spawn_model"
      args="-x $(arg x)
            -y $(arg y)
	    -z $(arg z)
	    -Y $(arg yaw)
            -unpause
            -urdf
            -param robot_description
	    -model $(arg robot_namespace)"/>
  <!-- Load controller configuration -->
  <rosparam command="load" file="$(find arosrobot_control)/config/gazebo_control.yaml" />


  <!-- Spawn controllers -->
  <node name="base_controller_spawner" pkg="controller_manager" type="spawner"
        args="arosrobot_joint_publisher arosrobot_velocity_controller"/>

  <!-- Start EKF for localization 
  <include file="$(find arosrobot_control)/launch/gazebo_gps_localization.launch">
  </include>

  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

</launch>
